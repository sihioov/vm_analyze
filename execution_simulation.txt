=== VM 분석 결과 ===
생성 시간: 2025-05-31 16:27:33
분석 모드: 실행 시뮬레이션
============================================================

[*] 실행 시뮬레이션을 시작합니다...
[*] 설정: 최대 50개 명령어
[*] 실행 시뮬레이션 시작: 0x7ff64dbfc67a
============================================================
  1. 0x7ff64dbfc67a: jmp 0x7ff64dbf0b90
        → 점프: 0x7ff64dbf0b90
        🔄 점프: 0x7ff64dbfc67a → 0x7ff64dbf0b90
----------------------------------------
  2. 0x7ff64dbf0b90: mov r9, rbp
        → r9 = 0x7fff12340000
        레지스터: r9=0x7fff12340000
----------------------------------------
  3. 0x7ff64dbf0b93: add r9, 0xf8
        → r9 = 0x7fff12340000 + 0xf8 = 0x7fff123400f8
        레지스터: r9=0x7fff123400f8
----------------------------------------
  4. 0x7ff64dbf0b9a: jmp 0x7ff64dbf0af4
        → 점프: 0x7ff64dbf0af4
        레지스터: r9=0x7fff123400f8
        🔄 점프: 0x7ff64dbf0b9a → 0x7ff64dbf0af4
----------------------------------------
  5. 0x7ff64dbf0af4: mov rax, r9
        → rax = 0x7fff123400f8
        레지스터: rax=0x7fff123400f8, r9=0x7fff123400f8
----------------------------------------
  6. 0x7ff64dbf0af7: add ecx, 0x5c75cc56
        → ecx = 0x0 + 0x5c75cc56 = 0x5c75cc56
        레지스터: rax=0x7fff123400f8, rcx=0x5c75cc56, r9=0x7fff123400f8
----------------------------------------
  7. 0x7ff64dbf0afd: jmp 0x7ff64dbf0cb5
        → 점프: 0x7ff64dbf0cb5
        레지스터: rax=0x7fff123400f8, rcx=0x5c75cc56, r9=0x7fff123400f8
        🔄 점프: 0x7ff64dbf0afd → 0x7ff64dbf0cb5
----------------------------------------
  8. 0x7ff64dbf0cb5: cmp qword ptr [rax], rcx
        🔮 [추정값] 0x7fff123400f8 = 0x2 ← 실제값 확인 필요!
        → qword ptr [rax] - rcx = 0xffffffffa38a33ac
        레지스터: rax=0x7fff123400f8, rcx=0x5c75cc56, r9=0x7fff123400f8
----------------------------------------
  9. 0x7ff64dbf0cb8: mov rcx, rbp
        → rcx = 0x7fff12340000
        레지스터: rax=0x7fff123400f8, rcx=0x7fff12340000, r9=0x7fff123400f8
----------------------------------------
 10. 0x7ff64dbf0cbb: add rcx, 0xf8
        → rcx = 0x7fff12340000 + 0xf8 = 0x7fff123400f8
        레지스터: rax=0x7fff123400f8, rcx=0x7fff123400f8, r9=0x7fff123400f8
----------------------------------------
 11. 0x7ff64dbf0cc2: and dword ptr [rcx], 0x4c69c78
        🔮 [추정값] 0x7fff123400f8 = 0x2 ← 실제값 확인 필요!
        [메모리] 0x7fff123400f8 ← 0x0 (저장)
        → dword ptr [rcx] = 0x2 & 0x4c69c78 = 0x0
        레지스터: rax=0x7fff123400f8, rcx=0x7fff123400f8, r9=0x7fff123400f8
----------------------------------------
 12. 0x7ff64dbf0cc8: jmp 0x7ff64dbf0bbc
        → 점프: 0x7ff64dbf0bbc
        레지스터: rax=0x7fff123400f8, rcx=0x7fff123400f8, r9=0x7fff123400f8
        🔄 점프: 0x7ff64dbf0cc8 → 0x7ff64dbf0bbc
----------------------------------------
 13. 0x7ff64dbf0bbc: mov r15, rbp
        → r15 = 0x7fff12340000
        레지스터: rax=0x7fff123400f8, rcx=0x7fff123400f8, r9=0x7fff123400f8, r15=0x7fff12340000
----------------------------------------
 14. 0x7ff64dbf0bbf: add r15, 0x33
        → r15 = 0x7fff12340000 + 0x33 = 0x7fff12340033
        레지스터: rax=0x7fff123400f8, rcx=0x7fff123400f8, r9=0x7fff123400f8, r15=0x7fff12340033
----------------------------------------
 15. 0x7ff64dbf0bc6: or dword ptr [r15], 0x34c4a2e3
        🔮 [추정값] 0x7fff12340033 = 0x1000 ← 실제값 확인 필요!
        [메모리] 0x7fff12340033 ← 0x34c4b2e3 (저장)
        → dword ptr [r15] = 0x1000 | 0x34c4a2e3 = 0x34c4b2e3
        레지스터: rax=0x7fff123400f8, rcx=0x7fff123400f8, r9=0x7fff123400f8, r15=0x7fff12340033
----------------------------------------
 16. 0x7ff64dbf0bcd: mov r14, rbp
        → r14 = 0x7fff12340000
        레지스터: rax=0x7fff123400f8, rcx=0x7fff123400f8, r9=0x7fff123400f8, r14=0x7fff12340000, r15=0x7fff12340033
----------------------------------------
 17. 0x7ff64dbf0bd0: and r8, rax
        → r8 = 0x0 & 0x7fff123400f8 = 0x0
        레지스터: rax=0x7fff123400f8, rcx=0x7fff123400f8, r9=0x7fff123400f8, r14=0x7fff12340000, r15=0x7fff12340033
----------------------------------------
 18. 0x7ff64dbf0bd3: sub r13, r10
        → r13 = 0x0 - 0x0 = 0x0
        레지스터: rax=0x7fff123400f8, rcx=0x7fff123400f8, r9=0x7fff123400f8, r14=0x7fff12340000, r15=0x7fff12340033
----------------------------------------
 19. 0x7ff64dbf0bd6: jmp 0x7ff64dbf0a3b
        → 점프: 0x7ff64dbf0a3b
        레지스터: rax=0x7fff123400f8, rcx=0x7fff123400f8, r9=0x7fff123400f8, r14=0x7fff12340000, r15=0x7fff12340033
        🔄 점프: 0x7ff64dbf0bd6 → 0x7ff64dbf0a3b
----------------------------------------
 20. 0x7ff64dbf0a3b: add r14, 0x61
        → r14 = 0x7fff12340000 + 0x61 = 0x7fff12340061
        레지스터: rax=0x7fff123400f8, rcx=0x7fff123400f8, r9=0x7fff123400f8, r14=0x7fff12340061, r15=0x7fff12340033
----------------------------------------
 21. 0x7ff64dbf0a42: and rbx, 0xf1
        → rbx = 0x0 & 0xf1 = 0x0
        레지스터: rax=0x7fff123400f8, rcx=0x7fff123400f8, r9=0x7fff123400f8, r14=0x7fff12340061, r15=0x7fff12340033
----------------------------------------
 22. 0x7ff64dbf0a49: xor rax, 0x5d
        → rax = 0x7fff123400f8 ^ 0x5d = 0x7fff123400a5
        레지스터: rax=0x7fff123400a5, rcx=0x7fff123400f8, r9=0x7fff123400f8, r14=0x7fff12340061, r15=0x7fff12340033
----------------------------------------
 23. 0x7ff64dbf0a4f: xor r8, r13
        → r8 = 0x0 ^ 0x0 = 0x0
        레지스터: rax=0x7fff123400a5, rcx=0x7fff123400f8, r9=0x7fff123400f8, r14=0x7fff12340061, r15=0x7fff12340033
----------------------------------------
 24. 0x7ff64dbf0a52: add rbx, r11
        → rbx = 0x0 + 0x0 = 0x0
        레지스터: rax=0x7fff123400a5, rcx=0x7fff123400f8, r9=0x7fff123400f8, r14=0x7fff12340061, r15=0x7fff12340033
----------------------------------------
 25. 0x7ff64dbf0a55: mov r14, qword ptr [r14]
        🔮 [추정값] 0x7fff12340061 = 0x5 ← 실제값 확인 필요!
        → r14 = 0x5
        레지스터: rax=0x7fff123400a5, rcx=0x7fff123400f8, r9=0x7fff123400f8, r14=0x5, r15=0x7fff12340033
----------------------------------------
 26. 0x7ff64dbf0a58: mov rbx, r8
        → rbx = 0x0
        레지스터: rax=0x7fff123400a5, rcx=0x7fff123400f8, r9=0x7fff123400f8, r14=0x5, r15=0x7fff12340033
----------------------------------------
 27. 0x7ff64dbf0a5b: add r14, 4
        → r14 = 0x5 + 0x4 = 0x9
        레지스터: rax=0x7fff123400a5, rcx=0x7fff123400f8, r9=0x7fff123400f8, r14=0x9, r15=0x7fff12340033
----------------------------------------
 28. 0x7ff64dbf0a62: add r8, 0x59
        → r8 = 0x0 + 0x59 = 0x59
        레지스터: rax=0x7fff123400a5, rcx=0x7fff123400f8, r8=0x59, r9=0x7fff123400f8, r14=0x9, r15=0x7fff12340033
----------------------------------------
 29. 0x7ff64dbf0a69: movzx r10, word ptr [r14]
        🔮 [추정값] 0x9 = 0x0 ← 실제값 확인 필요!
        → r10 = 0x0
        레지스터: rax=0x7fff123400a5, rcx=0x7fff123400f8, r8=0x59, r9=0x7fff123400f8, r14=0x9, r15=0x7fff12340033
----------------------------------------
 30. 0x7ff64dbf0a6d: jmp 0x7ff64dbf0c3e
        → 점프: 0x7ff64dbf0c3e
        레지스터: rax=0x7fff123400a5, rcx=0x7fff123400f8, r8=0x59, r9=0x7fff123400f8, r14=0x9, r15=0x7fff12340033
        🔄 점프: 0x7ff64dbf0a6d → 0x7ff64dbf0c3e
----------------------------------------
 31. 0x7ff64dbf0c3e: add r8, r11
        → r8 = 0x59 + 0x0 = 0x59
        레지스터: rax=0x7fff123400a5, rcx=0x7fff123400f8, r8=0x59, r9=0x7fff123400f8, r14=0x9, r15=0x7fff12340033
----------------------------------------
 32. 0x7ff64dbf0c41: or r11, 0x94
        → r11 = 0x0 | 0x94 = 0x94
        레지스터: rax=0x7fff123400a5, rcx=0x7fff123400f8, r8=0x59, r9=0x7fff123400f8, r11=0x94, r14=0x9, r15=0x7fff12340033
----------------------------------------
 33. 0x7ff64dbf0c48: jmp 0x7ff64dbf0a96
        → 점프: 0x7ff64dbf0a96
        레지스터: rax=0x7fff123400a5, rcx=0x7fff123400f8, r8=0x59, r9=0x7fff123400f8, r11=0x94, r14=0x9, r15=0x7fff12340033
        🔄 점프: 0x7ff64dbf0c48 → 0x7ff64dbf0a96
----------------------------------------
 34. 0x7ff64dbf0a96: mov rax, 0x200
        → rax = 0x200
        레지스터: rax=0x200, rcx=0x7fff123400f8, r8=0x59, r9=0x7fff123400f8, r11=0x94, r14=0x9, r15=0x7fff12340033
----------------------------------------
 35. 0x7ff64dbf0a9d: jmp 0x7ff64dbf0aa7
        → 점프: 0x7ff64dbf0aa7
        레지스터: rax=0x200, rcx=0x7fff123400f8, r8=0x59, r9=0x7fff123400f8, r11=0x94, r14=0x9, r15=0x7fff12340033
        🔄 점프: 0x7ff64dbf0a9d → 0x7ff64dbf0aa7
----------------------------------------
 36. 0x7ff64dbf0aa7: add r10, rbp
        → r10 = 0x0 + 0x7fff12340000 = 0x7fff12340000
        레지스터: rax=0x200, rcx=0x7fff123400f8, r8=0x59, r9=0x7fff123400f8, r10=0x7fff12340000, r11=0x94, r14=0x9, r15=0x7fff12340033
----------------------------------------
 37. 0x7ff64dbf0aaa: mov qword ptr [r10], rsp
        [메모리] 0x7fff12340000 ← 0x7fff12340000 (저장)
        → qword ptr [r10] = 0x7fff12340000
        레지스터: rax=0x200, rcx=0x7fff123400f8, r8=0x59, r9=0x7fff123400f8, r10=0x7fff12340000, r11=0x94, r14=0x9, r15=0x7fff12340033
----------------------------------------
 38. 0x7ff64dbf0aad: mov rsi, rbp
        → rsi = 0x7fff12340000
        레지스터: rax=0x200, rcx=0x7fff123400f8, rsi=0x7fff12340000, r8=0x59, r9=0x7fff123400f8, r10=0x7fff12340000, r11=0x94, r14=0x9, r15=0x7fff12340033
----------------------------------------
 39. 0x7ff64dbf0ab0: mov rbx, rbp
        → rbx = 0x7fff12340000
        레지스터: rax=0x200, rbx=0x7fff12340000, rcx=0x7fff123400f8, rsi=0x7fff12340000, r8=0x59, r9=0x7fff123400f8, r10=0x7fff12340000, r11=0x94, r14=0x9, r15=0x7fff12340033
----------------------------------------
 40. 0x7ff64dbf0ab3: add rsi, 0x170
        → rsi = 0x7fff12340000 + 0x170 = 0x7fff12340170
        레지스터: rax=0x200, rbx=0x7fff12340000, rcx=0x7fff123400f8, rsi=0x7fff12340170, r8=0x59, r9=0x7fff123400f8, r10=0x7fff12340000, r11=0x94, r14=0x9, r15=0x7fff12340033
----------------------------------------
 41. 0x7ff64dbf0aba: add dword ptr [rsi], 0x5b1bbfba
        🔮 [추정값] 0x7fff12340170 = 0x8 ← 실제값 확인 필요!
        [메모리] 0x7fff12340170 ← 0x5b1bbfc2 (저장)
        → dword ptr [rsi] = 0x8 + 0x5b1bbfba = 0x5b1bbfc2
        레지스터: rax=0x200, rbx=0x7fff12340000, rcx=0x7fff123400f8, rsi=0x7fff12340170, r8=0x59, r9=0x7fff123400f8, r10=0x7fff12340000, r11=0x94, r14=0x9, r15=0x7fff12340033
----------------------------------------
 42. 0x7ff64dbf0ac0: add rbx, 0xf8
        → rbx = 0x7fff12340000 + 0xf8 = 0x7fff123400f8
        레지스터: rax=0x200, rbx=0x7fff123400f8, rcx=0x7fff123400f8, rsi=0x7fff12340170, r8=0x59, r9=0x7fff123400f8, r10=0x7fff12340000, r11=0x94, r14=0x9, r15=0x7fff12340033
----------------------------------------
 43. 0x7ff64dbf0ac7: jmp 0x7ff64dbf0c7c
        → 점프: 0x7ff64dbf0c7c
        레지스터: rax=0x200, rbx=0x7fff123400f8, rcx=0x7fff123400f8, rsi=0x7fff12340170, r8=0x59, r9=0x7fff123400f8, r10=0x7fff12340000, r11=0x94, r14=0x9, r15=0x7fff12340033
        🔄 점프: 0x7ff64dbf0ac7 → 0x7ff64dbf0c7c
----------------------------------------
 44. 0x7ff64dbf0c7c: add dword ptr [rbx], 0x4aa7542a
        [메모리] 0x7fff123400f8 = 0x0 (설정값)
        [메모리] 0x7fff123400f8 ← 0x4aa7542a (저장)
        → dword ptr [rbx] = 0x0 + 0x4aa7542a = 0x4aa7542a
        레지스터: rax=0x200, rbx=0x7fff123400f8, rcx=0x7fff123400f8, rsi=0x7fff12340170, r8=0x59, r9=0x7fff123400f8, r10=0x7fff12340000, r11=0x94, r14=0x9, r15=0x7fff12340033
----------------------------------------
 45. 0x7ff64dbf0c82: mov r12, rbp
        → r12 = 0x7fff12340000
        레지스터: rax=0x200, rbx=0x7fff123400f8, rcx=0x7fff123400f8, rsi=0x7fff12340170, r8=0x59, r9=0x7fff123400f8, r10=0x7fff12340000, r11=0x94, r12=0x7fff12340000, r14=0x9, r15=0x7fff12340033
----------------------------------------
 46. 0x7ff64dbf0c85: add r12, 0x170
        → r12 = 0x7fff12340000 + 0x170 = 0x7fff12340170
        레지스터: rax=0x200, rbx=0x7fff123400f8, rcx=0x7fff123400f8, rsi=0x7fff12340170, r8=0x59, r9=0x7fff123400f8, r10=0x7fff12340000, r11=0x94, r12=0x7fff12340170, r14=0x9, r15=0x7fff12340033
----------------------------------------
 47. 0x7ff64dbf0c8c: or r13, rbx
        → r13 = 0x0 | 0x7fff123400f8 = 0x7fff123400f8
        레지스터: rax=0x200, rbx=0x7fff123400f8, rcx=0x7fff123400f8, rsi=0x7fff12340170, r8=0x59, r9=0x7fff123400f8, r10=0x7fff12340000, r11=0x94, r12=0x7fff12340170, r13=0x7fff123400f8, r14=0x9, r15=0x7fff12340033
----------------------------------------
 48. 0x7ff64dbf0c8f: or rdx, 8
        → rdx = 0x0 | 0x8 = 0x8
        레지스터: rax=0x200, rbx=0x7fff123400f8, rcx=0x7fff123400f8, rdx=0x8, rsi=0x7fff12340170, r8=0x59, r9=0x7fff123400f8, r10=0x7fff12340000, r11=0x94, r12=0x7fff12340170, r13=0x7fff123400f8, r14=0x9, r15=0x7fff12340033
----------------------------------------
 49. 0x7ff64dbf0c96: mov r11, 0
        → r11 = 0x0
        레지스터: rax=0x200, rbx=0x7fff123400f8, rcx=0x7fff123400f8, rdx=0x8, rsi=0x7fff12340170, r8=0x59, r9=0x7fff123400f8, r10=0x7fff12340000, r12=0x7fff12340170, r13=0x7fff123400f8, r14=0x9, r15=0x7fff12340033
----------------------------------------
 50. 0x7ff64dbf0c9d: xor rdx, 0x28
        → rdx = 0x8 ^ 0x28 = 0x20
        레지스터: rax=0x200, rbx=0x7fff123400f8, rcx=0x7fff123400f8, rdx=0x20, rsi=0x7fff12340170, r8=0x59, r9=0x7fff123400f8, r10=0x7fff12340000, r12=0x7fff12340170, r13=0x7fff123400f8, r14=0x9, r15=0x7fff12340033
----------------------------------------

[*] 시뮬레이션 완료 - 총 50개 명령어 실행

=== 분석 완료 ===
